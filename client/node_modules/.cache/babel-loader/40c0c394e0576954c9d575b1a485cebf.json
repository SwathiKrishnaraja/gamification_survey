{"ast":null,"code":"import { listOfImages } from '../badges/BadgeList';\n\nconst badgeProvider = dispatch => {\n  const badge = {\n    letsGoBadge: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[0]\n      });\n    },\n    thirtyThreeBadge: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[1]\n      });\n    },\n    sixtySixBadge: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[3]\n      });\n    },\n    fastAchiever: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[4]\n      });\n    },\n    masterOfInterview: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[5]\n      });\n    },\n    winner: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[6]\n      });\n    },\n    fullPoints: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[7]\n      });\n    },\n    tactician: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[8]\n      });\n    },\n    medalCollector: () => {\n      dispatch({\n        type: 'ADD_BADGE',\n        payload: listOfImages[9]\n      });\n    }\n  };\n  return {\n    badge\n  };\n};\n\nexport default badgeProvider;","map":{"version":3,"sources":["/Users/gowthammohan/Swathi/gamification_survey/src/BadgeRules/BadgeRules.tsx"],"names":["listOfImages","badgeProvider","dispatch","badge","letsGoBadge","type","payload","thirtyThreeBadge","sixtySixBadge","fastAchiever","masterOfInterview","winner","fullPoints","tactician","medalCollector"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;;AAWA,MAAMC,aAAa,GAAIC,QAAD,IAAqC;AAEvD,QAAMC,KAAK,GAAG;AACVC,IAAAA,WAAW,EAAE,MAAM;AACfF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH,KAHS;AAIVO,IAAAA,gBAAgB,EAAE,MAAM;AACpBL,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH,KANS;AAOVQ,IAAAA,aAAa,EAAE,MAAM;AACjBN,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH,KATS;AAUVS,IAAAA,YAAY,EAAE,MAAM;AAChBP,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH,KAZS;AAaVU,IAAAA,iBAAiB,EAAE,MAAM;AACrBR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH,KAfS;AAgBVW,IAAAA,MAAM,EAAE,MAAM;AACVT,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH,KAlBS;AAmBVY,IAAAA,UAAU,EAAE,MAAM;AACdV,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH,KArBS;AAsBVa,IAAAA,SAAS,EAAE,MAAM;AACbX,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH,KAxBS;AAyBVc,IAAAA,cAAc,EAAE,MAAM;AAClBZ,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEN,YAAY,CAAC,CAAD;AAA1C,OAAD,CAAR;AACH;AA3BS,GAAd;AAgCA,SAAO;AAAEG,IAAAA;AAAF,GAAP;AACH,CAnCD;;AAqCA,eAAeF,aAAf","sourcesContent":["import { listOfImages } from '../badges/BadgeList'\nimport { Badge } from '../types/types'\nimport { Dispatch } from 'redux'\n\ninterface BadgeAction {\n    type: 'ADD_BADGE' | 'NOTIFY_BADGE',\n    payload: Badge\n}\n\n\n\nconst badgeProvider = (dispatch: Dispatch<BadgeAction>) => {\n\n    const badge = {\n        letsGoBadge: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[0] })\n        },\n        thirtyThreeBadge: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[1] })\n        },\n        sixtySixBadge: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[3] })\n        },\n        fastAchiever: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[4] })\n        },\n        masterOfInterview: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[5] })\n        },\n        winner: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[6] })\n        },\n        fullPoints: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[7] })\n        },\n        tactician: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[8] })\n        },\n        medalCollector: () => {\n            dispatch({ type: 'ADD_BADGE', payload: listOfImages[9] })\n        },\n\n    }\n\n\n    return { badge }\n}\n\nexport default badgeProvider "]},"metadata":{},"sourceType":"module"}